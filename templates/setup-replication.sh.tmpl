#!/bin/sh

psql -U postgres -v ON_ERROR_STOP=1 <<-EOF
CREATE USER replicator REPLICATION SUPERUSER LOGIN PASSWORD '$REPLICATOR_PASSWORD';
ALTER SYSTEM SET wal_level = hot_standby;
ALTER SYSTEM SET max_wal_senders = 16;
ALTER SYSTEM SET max_replication_slots = 10;
ALTER SYSTEM SET wal_keep_segments = 32;
ALTER SYSTEM SET hot_standby = on;
EOF

echo host replication replicator 0.0.0.0/0 md5 >> ${PGDATA}/pg_hba.conf

{{if exists "/self/service/containers/1/uuid"}}
# replica

until pg_isready -h lb
do
  echo "Sleep 1s and try again..."
  sleep 1
done

echo "Stopping PostgreSQL..."
gosu postgres pg_ctl -D "$PGDATA" -m fast -w stop

echo "Removing data dir..."
rm -rf $PGDATA/*

echo "Launching pg_basebackup..."
export PGPASSWORD=$REPLICATOR_PASSWORD
gosu postgres pg_basebackup -R -h lb -D $PGDATA -U replicator -v -P --xlog-method=stream -w

echo "Create physical_replication_slot on server..."
if getent hosts rancher-metadata
then
  if ! dpkg -l curl
  then
    apt-get update
    apt-get install --no-install-recommends --no-install-suggests -y curl
    rm -rf /var/lib/apt/lists/*
  fi
  slot_name=$(curl -s http://rancher-metadata/2015-12-19/self/host/hostname | tr '-' '_')
else
  slot_name=${HOSTNAME}
fi
psql -h lb -c "SELECT * FROM pg_create_physical_replication_slot('${slot_name}');" -U replicator -d postgres

cat >> ${PGDATA}/recovery.conf <<-EOF
primary_slot_name = '${slot_name}'
recovery_target_timeline = 'latest'
EOF

echo "Starting PostgreSQL..."
gosu postgres pg_ctl -D "$PGDATA" -w start

{{else}}
# master
{{end}}
